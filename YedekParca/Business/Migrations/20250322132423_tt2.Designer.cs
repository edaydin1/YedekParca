// <auto-generated />
using Business.WebAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace YedekParca.WebAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250322132423_tt2")]
    partial class tt2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Entity.ModelDef", b =>
                {
                    b.Property<int>("ModelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ModelID"));

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MotorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ModelID");

                    b.ToTable("ModelTanimlari");
                });

            modelBuilder.Entity("Data.Entity.StokDet", b =>
                {
                    b.Property<int>("StokID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StokID"));

                    b.Property<int>("ModelID")
                        .HasColumnType("integer");

                    b.Property<int>("StokAdn")
                        .HasColumnType("integer");

                    b.Property<int>("StokAnk")
                        .HasColumnType("integer");

                    b.Property<int>("StokErz")
                        .HasColumnType("integer");

                    b.Property<int>("StokIzm")
                        .HasColumnType("integer");

                    b.Property<int>("StokMRK")
                        .HasColumnType("integer");

                    b.Property<int>("YedekParcasId")
                        .HasColumnType("integer");

                    b.HasKey("StokID");

                    b.HasIndex("YedekParcasId");

                    b.ToTable("StokDetaylar");
                });

            modelBuilder.Entity("Data.Entity.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "123",
                            Role = "admin",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Password = "user",
                            Role = "user",
                            UserName = "user"
                        });
                });

            modelBuilder.Entity("Data.Entity.YedekParcaModel", b =>
                {
                    b.Property<int>("YedekParcasId")
                        .HasColumnType("integer");

                    b.Property<int>("ModelID")
                        .HasColumnType("integer");

                    b.HasKey("YedekParcasId", "ModelID");

                    b.HasIndex("ModelID");

                    b.ToTable("YedekParcaModel");
                });

            modelBuilder.Entity("Data.Entity.YedekParcas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("YedekParcalar");
                });

            modelBuilder.Entity("Data.Entity.StokDet", b =>
                {
                    b.HasOne("Data.Entity.YedekParcas", "YedekParcas")
                        .WithMany("StokGuid")
                        .HasForeignKey("YedekParcasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YedekParcas");
                });

            modelBuilder.Entity("Data.Entity.YedekParcaModel", b =>
                {
                    b.HasOne("Data.Entity.ModelDef", "Model")
                        .WithMany("YedekParcaModelleri")
                        .HasForeignKey("ModelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entity.YedekParcas", "YedekParcas")
                        .WithMany("YedekParcaModelleri")
                        .HasForeignKey("YedekParcasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("YedekParcas");
                });

            modelBuilder.Entity("Data.Entity.ModelDef", b =>
                {
                    b.Navigation("YedekParcaModelleri");
                });

            modelBuilder.Entity("Data.Entity.YedekParcas", b =>
                {
                    b.Navigation("StokGuid");

                    b.Navigation("YedekParcaModelleri");
                });
#pragma warning restore 612, 618
        }
    }
}
